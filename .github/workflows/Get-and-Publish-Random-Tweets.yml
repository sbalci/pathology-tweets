name: Get and Publish Random Tweets
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '5 20 * * 4'


jobs:



  quarto-render-and-deploy:
    if: "!contains(github.event.head_commit.message, 'WIP')"
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: "actions checkout"
        uses: actions/checkout@v2

      - name: "Setup Quarto"
        uses: quarto-dev/quarto-actions/setup@v2

      - name: "Install curl for Bioconductor"
        run: |
          sudo apt -y install libcurl4-openssl-dev


      - uses: r-lib/actions/setup-r@v2


      - uses: r-lib/actions/setup-renv@v2



      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-


      - name: Install R dependencies
        run: |
          if (!requireNamespace("remotes", quietly = TRUE)) {install.packages("remotes", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          remotes::install_deps(dependencies = TRUE)
          if (!requireNamespace("renv", quietly = TRUE)) {install.packages("renv")}
          renv::restore()
          if (!requireNamespace("magrittr", quietly = TRUE)) {install.packages("magrittr", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          if (!requireNamespace("dplyr", quietly = TRUE)) {install.packages("dplyr", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          if (!requireNamespace("googledrive", quietly = TRUE)) {install.packages("googledrive", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          if (!requireNamespace("googlesheets4", quietly = TRUE)) {install.packages("googlesheets4", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          if (!requireNamespace("quarto", quietly = TRUE)) {install.packages("quarto", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          if (!requireNamespace("fs", quietly = TRUE)) {install.packages("fs", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}


      - name: run R script
        run: |
          source('./tags.R')
        shell: Rscript {0}



      - name: Commit results to main branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "CI added changes `date +'%Y-%m-%d %H:%M:%S'`" || echo "No changes to commit"
          git push origin || echo "No changes to commit"
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # WORKFLOW_GITHUB_TOKEN
          force: true

